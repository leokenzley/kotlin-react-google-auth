openapi: 3.0.3
info:
  title: Kotlinapi API
  version: "0.0.1"
servers:
  - url: http://localhost:8080

tags:
  - name: users
    description: Everything about your Users
    externalDocs:
      description: Find out more
      url: https://swagger.io
  - name: artists
    description: Everything about your Users
    externalDocs:
      description: Find out more
      url: https://swagger.io
  - name: agenda
    description: Everything about your Users
    externalDocs:
      description: Find out more
      url: https://swagger.io

paths:
  /users:
    get:
      tags:
        - users
      summary: Retorna a lista de usuários
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

    post:
      tags:
        - users
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /users/{id}:
    parameters: # Defina o parâmetro no nível do caminho
      - name: id
        in: path
        description: The id that needs to be fetched. Use user1 for testing
        required: true
        schema:
          type: integer
          format: int32
    get:
      tags:
        - users
      summary: Get user by user id.
      description: Get user detail based on id.
      operationId: getUserById
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - users
      summary: Update an existing user.
      description: Update an existing user by Id.
      operationId: updateUser
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /artists:
    get:
      tags:
        - artists
      summary: Retorna a lista de artistas
      responses:
        '200':
          description: Lista de artistas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtistResponse'
    post:
      tags:
        - artists
      summary: Cria um novo artista
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistRequest'
      responses:
        '201':
          description: Artista criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistResponse'

  /agenda:
    get:
      tags:
        - agenda
      summary: Retorna a lista de compromissos (agenda)
      responses:
        '200':
          description: Lista de agenda
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgendaResponse'
    post:
      tags:
        - agenda
      summary: Cria um novo compromisso na agenda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgendaRequest'
      responses:
        '201':
          description: Compromisso criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgendaResponse'

components:
  schemas:
    UserRequest:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 100
        status:
          type: string
          description: "Status do usuário (ex.: 'A' para ativo)"
          maxLength: 1
          default: "A"
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/UserRequest'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    ArtistRequest:
      type: object
      required:
        - name
        - email
        - telephone
      properties:
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 100
        telephone:
          type: string
          maxLength: 11
        status:
          type: string
          description: "Status do artista (ex.: 'A' para ativo)"
          maxLength: 1
          default: "A"
        imagelink:
          type: string
          description: URL da imagem do artista
        incorporate:
          type: string
          description: Informação de incorporação
    ArtistResponse:
      allOf:
        - $ref: '#/components/schemas/ArtistRequest'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    AgendaRequest:
      type: object
      required:
        - date_commitment
        - organizer_responsible
        - telephone
        - email
        - artists_id
      properties:
        date_commitment:
          type: string
          maxLength: 50
          description: Data ou período do compromisso
        organizer_responsible:
          type: string
          maxLength: 100
          description: Responsável pelo compromisso
        telephone:
          type: string
          maxLength: 11
        email:
          type: string
          format: email
          maxLength: 100
        status:
          type: string
          description: "Status do compromisso (ex.: 'A' para ativo)"
          maxLength: 1
          default: "A"
        artists_id:
          type: integer
          format: int64
          description: Identificador do artista associado
    AgendaResponse:
      allOf:
        - $ref: '#/components/schemas/AgendaRequest'
        - type: object
          properties:
            id:
              type: integer
              format: int64

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message







